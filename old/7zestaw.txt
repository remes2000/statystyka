# 7.5 Zadania 7
# Zadanie 1
rok <- c(1995,1996,1997,1998,1999,2000,2001,2002)
liczba_przypadkow <- c(39.7,38.2,34.7,33.1,30.1,28.4,26.3,24.7)
data_set <- data.frame(rok = rok, liczba_przypadkow = liczba_przypadkow)
head(data_set)
plot(data_set, main = "Wykres rozrzutu", pch = 16)

model <- lm(liczba_przypadkow ~ rok, data = data_set)
model

plot(data_set, main = "Wykres rozrzutu", pch = 16)
abline(model, col = "red", lwd = 2)

confint(model)
summary(model)
fitted(model)
residuals(model)
liczba_przypadkow - fitted(model)

tem_rok <- data.frame(rok = seq(min(data_set$rok) - 8,
                                max(data_set$rok) + 8,
                                length = 8))
pred <- stats::predict(model, tem_rok, interval = "prediction")
pred
plot(data_set, main = "Wykres rozrzutu", pch = 16)
abline(model, col = "red", lwd = 2)
lines(tem_rok$rok, pred[, 2], lty = 2, col = "red")
lines(tem_rok$rok, pred[, 3], lty = 2, col = "red")

nowy_przychod <- data.frame(rok = c(2003, 2004, 2005, 2006, 2007))
stats::predict(model, nowy_przychod, interval = 'prediction')

#w tym modelu nie jest sensowne usuwanie wyrazu wolnego



# Zadanie 3.
data <- read.csv("D:/R/Automobile.csv", na.strings = "?")
data$num.of.doors <- ifelse(data$num.of.doors == "four", 4, 2)
prep_data <- na.omit(data)
head(data)
dim(prep_data)

model_1 <- lm(price ~ horsepower + city.mpg + peak.rpm + curb.weight + num.of.doors,
              data = prep_data)
model_1

coef(model_1)
confint(model_1)
summary(model_1)
fitted(model_1)
residuals(model_1)
step(model_1)
summary(model_1)
model_2 <- lm(price ~ horsepower + city.mpg + curb.weight + num.of.doors,
              data = prep_data)
summary(model_2)
model_3 <- lm(price ~ horsepower + curb.weight + num.of.doors,
              data = prep_data)
summary(model_3)
model_4 <- lm(price ~ horsepower + curb.weight,
              data = prep_data)
summary(model_4)







# Zadanie 4.
load("C:/Users/48796/Desktop/Statystyka/liver_data.RData")
head(liver_data)

model_1 <- glm(condition ~ bilirubin + ldh, data = liver_data, family = 'binomial')
model_1

summary(model_1)
step(model_1)

exp(coef(model_1)[2])
exp(coef(model_1)[3])

# do krzywych ROC
library(ROCR) 
pred_1 <- prediction(model_1$fitted, liver_data$condition) 
# krzywe ROC
plot(performance(pred_1, 'tpr', 'fpr'), main = "Model 1")

performance(pred_1, 'auc')@y.values

# predykcja
(predict_glm <- stats::predict(model_1, 
                               data.frame(bilirubin = c(0.9, 2.1, 3.4),
                                          ldh = c(100, 200, 300)), 
                               type = 'response'))



